#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.2.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 71 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1           0 10786 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 198
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e |Final Centipede|) (read-case-sensitive #t) (teachpacks ()) (htdp-"
 #"settings #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; Data Definitions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; A World is a (make-world Player [Listof Centipedes] [Listof Mushr"
 #"ooms] Tic)"
) 0 0 24 29 1 #"\n"
0 0 17 3 65
#";; Where Tic is a whole number from 0 to 2 and A Player is a Posn"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #" ("
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #" "
0 0 14 3 3 #"tic"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Template:"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-temp"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #") "
0 0 14 3 2 #".."
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-bullet"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 9 #"world-tic"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; A bullet is a (make-bullet Posn Boolean)"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; where the boolean represents whether or not the bullet is shootin"
 #"g"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"shooting?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Template:"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-temp"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 16 #"bullet-shooting?"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; A Mushroom is a (make-mushroom Posn Condition)"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; where Condition is a whole number from 1 to 4"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"condition"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Template"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-temp"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 18 #"mushroom-condition"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; A Centipede is a directionx, directiony and a Centipede-Body"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; A DirectionX is one of"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; - 'left"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; - 'right"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; A DirectionY is one of"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; - 'up"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; - 'down"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; A Centipede is a (make-centipede Direction Centipede-Body)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #" ("
0 0 14 3 4 #"dirx"
0 0 24 3 1 #" "
0 0 14 3 4 #"diry"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Template"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-temp"
0 0 24 3 1 #" "
0 0 14 3 4 #"cent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 4 #"cent"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 4 #"cent"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 4 #"cent"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; CONSTANTS"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"BG"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"PLAYER"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"PLAYER-IMG"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"BULLET"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 21 3 2 #"-1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BULLET-IMG"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"CENTIPEDE-CELL"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"TONGUE"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"LEFT-HEAD"
0 0 24 3 2 #" ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 14 3 6 #"TONGUE"
0 0 24 3 2 #") "
0 0 14 3 14 #"CENTIPEDE-CELL"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"RIGHT-HEAD"
0 0 24 3 2 #" ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 14 3 6 #"TONGUE"
0 0 24 3 2 #") "
0 0 14 3 14 #"CENTIPEDE-CELL"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"BULLET-SPEED"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"INITIAL-TIC"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"MUSHROOM-RADIUS"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"MUSHROOM-1-C"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"LightSalmon"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"MUSHROOM-2-C"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Salmon"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"MUSHROOM-3-C"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"OrangeRed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"MUSHROOM-4-C"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"DarkRed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"MUSHROOM-4"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 15 #"MUSHROOM-RADIUS"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 12 #"MUSHROOM-4-C"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"MUSHROOM-3"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 15 #"MUSHROOM-RADIUS"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 12 #"MUSHROOM-3-C"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"MUSHROOM-2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 15 #"MUSHROOM-RADIUS"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 12 #"MUSHROOM-2-C"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"MUSHROOM-1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 15 #"MUSHROOM-RADIUS"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 12 #"MUSHROOM-1-C"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"WINNER"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"WINNER\""
0 0 24 3 1 #" "
0 0 21 3 2 #"72"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"LOSER"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"LOSER\""
0 0 24 3 1 #" "
0 0 21 3 2 #"72"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; Example of a World"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"world0"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 6 #"PLAYER"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 14 3 6 #"BULLET"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Drawing Functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; place-image-grid : Image Number Number Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Places an image using cartesian coordinates "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"place-image-grid"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 3 #"bkg"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #") "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #") "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 3 #"bkg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"place-image-grid"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 12           4 65 934
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 155/2 1025/2 #(struct:translate 5 5 #(st"
 #"ruct:ellipse 10 10 0 255 \"red\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 6"
 #"00) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #"
 #"(struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 60"
 #"0 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(str"
 #"uct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 "
 #"0)) 255 \"white\")))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"place-image-grid"
0 0 24 3 1 #" "
0 0 14 3 10 #"MUSHROOM-1"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 2 #"BG"
0 0 24 3 2 #") "
0 12           4 65 943
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 225 360 #(struct:translate 15/2 15/2 #(s"
 #"truct:ellipse 15 15 0 255 \"LightSalmon\"))) #(struct:translate 0 0 "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:po"
 #"int 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375"
 #" 0 0 0) #(struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point"
 #" 0 0 0 600 0 0)) outline #(struct:pen \"black\" 2 solid round round)"
 #"))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0"
 #" 0) #(struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0"
 #" 0 600 0 0)) 255 \"white\")))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; list-of-centipedes+image : [Listof Centipedes] Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; Places a list of centipedes on an image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"list-of-centipedes+image"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 14 3 22 #"tongue+centipede+image"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 24 #"list-of-centipedes+image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))) "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 12           4 65 1872
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 80.0 515.3349364905389 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 -0.0 4.330127018922194 0 0) #(struct:pull"
 #"ed-point 0 0 5.0 4.330127018922194 0 0) #(struct:pulled-point 0 0 2."
 #"500000000000001 0.0 0 0)) 255 \"red\")) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 3"
 #"75 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 75 510 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 "
 #"0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 "
 #"0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600) #(st"
 #"ruct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 90 510 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #(struc"
 #"t:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 0 15 0 0)) 2"
 #"55 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 375 0) #(struct:point 375 600) #(struct:point 0"
 #" 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struct:pulled-point"
 #" 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) outline #(st"
 #"ruct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struct:pulled-point 0 0"
 #" 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) 255 \"white\")))"
 #"))))))))))))))) #(struct:bb 375 600 600.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 24 #"list-of-centipedes+image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 5 #")))) "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 12           4 65 3072
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 80.0 515.3349364905389 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 -0.0 4.330127018922194 0 0) #(struct:pull"
 #"ed-point 0 0 5.0 4.330127018922194 0 0) #(struct:pulled-point 0 0 2."
 #"500000000000001 0.0 0 0)) 255 \"red\")) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 3"
 #"75 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 75 510 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 "
 #"0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 "
 #"0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600) #(st"
 #"ruct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 90 510 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #(struc"
 #"t:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 0 15 0 0)) 2"
 #"55 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 375 0) #(struct:point 375 600) #(struct:point 0"
 #" 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 80"
 #".0 440.3349364905389 #(struct:polygon (#(struct:pulled-point 0 0 -0."
 #"0 4.330127018922194 0 0) #(struct:pulled-point 0 0 5.0 4.33012701892"
 #"2194 0 0) #(struct:pulled-point 0 0 2.500000000000001 0.0 0 0)) 255 "
 #"\"red\")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 375 0) #(struct:point 375 600) #(struct:point 0 600))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 75 435 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #(struct:pulled-point 0 0"
 #" 15 15 0 0) #(struct:pulled-point 0 0 0 15 0 0)) 255 \"green\"))) #("
 #"struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poi"
 #"nt 375 0) #(struct:point 375 600) #(struct:point 0 600)) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 90 435 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) "
 #"#(struct:pulled-point 0 0 0 15 0 0)) 255 \"green\"))) #(struct:trans"
 #"late 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #("
 #"struct:point 375 600) #(struct:point 0 600)) #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 375 0 0 0) #(struct:pulled-point 0 0 375 600 0 0) #(struct:pul"
 #"led-point 0 0 0 600 0 0)) outline #(struct:pen \"black\" 2 solid rou"
 #"nd round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 375 0 0 0) #(struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-"
 #"point 0 0 0 600 0 0)) 255 \"white\")))))))))))))))))))))))))))))) #("
 #"struct:bb 375 600 600.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; tongue+centipede+image : Centipede Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; draws a centipede and places a tongue on its head"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"tongue+centipede+image"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"place-image-grid"
0 0 24 3 1 #" "
0 0 14 3 6 #"TONGUE"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 15 #"centipede+image"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"tongue+centipede+image"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 12           4 65 2271
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 80.0 515.3349364905389 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 -0.0 4.330127018922194 0 0) #(struct:pull"
 #"ed-point 0 0 5.0 4.330127018922194 0 0) #(struct:pulled-point 0 0 2."
 #"500000000000001 0.0 0 0)) 255 \"red\")) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 3"
 #"75 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 75 510 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 "
 #"0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 "
 #"0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600) #(st"
 #"ruct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 90 510 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #(struc"
 #"t:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 0 15 0 0)) 2"
 #"55 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 375 0) #(struct:point 375 600) #(struct:point 0"
 #" 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 10"
 #"5 510 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #(struct:pulled-po"
 #"int 0 0 15 15 0 0) #(struct:pulle"
 #"d-point 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 3"
 #"75 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 "
 #"0) #(struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 "
 #"0 600 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #"
 #"(struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 60"
 #"0 0 0)) 255 \"white\")))))))))))))))))))))) #(struct:bb 375 600 600."
 #"0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"tongue+centipede+image"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 4 #"))) "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 12           4 65 2271
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 80.0 470.3349364905389 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 -0.0 4.330127018922194 0 0) #(struct:pull"
 #"ed-point 0 0 5.0 4.330127018922194 0 0) #(struct:pulled-point 0 0 2."
 #"500000000000001 0.0 0 0)) 255 \"red\")) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 3"
 #"75 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 75 465 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 "
 #"0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 "
 #"0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600) #(st"
 #"ruct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 90 465 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #(struc"
 #"t:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 0 15 0 0)) 2"
 #"55 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 375 0) #(struct:point 375 600) #(struct:point 0"
 #" 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 10"
 #"5 465 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #(struct:pulled-po"
 #"int 0 0 15 15 0 0) #(struct:pulle"
 #"d-point 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 3"
 #"75 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 "
 #"0) #(struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 "
 #"0 600 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #"
 #"(struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 60"
 #"0 0 0)) 255 \"white\")))))))))))))))))))))) #(struct:bb 375 600 600."
 #"0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; centipede+image : Centipede Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; Places a centipede on an image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"centipede+image"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 20 #"centipede-body+image"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"centipede+image"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 12           4 65 1865
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 75 510 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-poin"
 #"t 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 90 510 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #"
 #"(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 0 15 0"
 #" 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 375 0) #(struct:point 375 600) #(struct:p"
 #"oint 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 105 510 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #(struct:pul"
 #"led-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 0 15 0 0)) 255 \""
 #"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 375 0) #(struct:point 375 600) #(struct:point 0 600)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struct:pulled-point 0 0 "
 #"375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) outline #(struct:"
 #"pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 375 0 0 0) #(struct:pulled-point 0 0 375 "
 #"600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) 255 \"white\"))))))))"
 #")))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"centipede+image"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 4 #"))) "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 12           4 65 1865
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 75 465 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-poin"
 #"t 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 90 465 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #"
 #"(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 0 15 0"
 #" 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 375 0) #(struct:point 375 600) #(struct:p"
 #"oint 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 105 465 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #(struct:pul"
 #"led-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 0 15 0 0)) 255 \""
 #"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 375 0) #(struct:point 375 600) #(struct:point 0 600)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struct:pulled-point 0 0 "
 #"375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) outline #(struct:"
 #"pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 375 0 0 0) #(struct:pulled-point 0 0 375 "
 #"600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) 255 \"white\"))))))))"
 #")))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; centipede-body+image : CentipedeBody Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; draws an entire centipede body onto an existing image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"centipede-body+image"
0 0 24 3 1 #" "
0 0 14 3 8 #"centbody"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 14 3 10 #"cell+image"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #" "
0 0 14 3 8 #"centbody"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"centipede-body+image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 12           4 65 1865
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 75 510 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-poin"
 #"t 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 90 510 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #"
 #"(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 0 15 0"
 #" 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 375 0) #(struct:point 375 600) #(struct:p"
 #"oint 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 105 510 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #(struct:pul"
 #"led-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 0 15 0 0)) 255 \""
 #"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 375 0) #(struct:point 375 600) #(struct:point 0 600)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struct:pulled-point 0 0 "
 #"375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) outline #(struct:"
 #"pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 375 0 0 0) #(struct:pulled-point 0 0 375 "
 #"600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) 255 \"white\"))))))))"
 #")))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"centipede-body+image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 12           4 65 1867
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 150 435 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 60"
 #"0) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 165 435 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0)"
 #" #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 0 15"
 #" 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 375 0) #(struct:point 375 600) #(struct"
 #":point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 180 435 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #(struct:p"
 #"ulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 0 15 0 0)) 255 "
 #"\"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 375 0) #(struct:point 375 600) #(struct:point 0 60"
 #"0)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struct:pulled-point 0 "
 #"0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) outline #(struc"
 #"t:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 375 0 0 0) #(struct:pulled-point 0 0 37"
 #"5 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) 255 \"white\"))))))"
 #")))))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; segment+image : Segment Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; draws a single segment onto an existing image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"cell+image"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"place-image-grid"
0 0 24 3 1 #" "
0 0 14 3 14 #"CENTIPEDE-CELL"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"cell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"cell+image"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 12           4 65 1068
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 75 510 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-poin"
 #"t 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(s"
 #"truct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 "
 #"0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struc"
 #"t:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)"
 #") 255 \"white\")))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"cell+image"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 12           4 65 1069
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 150 435 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 60"
 #"0) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #("
 #"struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(stru"
 #"ct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0"
 #")) 255 \"white\")))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; player+image : Player Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; draws a player onto an image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player+image"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"place-image-grid"
0 0 24 3 1 #" "
0 0 14 3 10 #"PLAYER-IMG"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player+image"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 12           4 65 1068
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 75 510 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-poin"
 #"t 0 0 0 15 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(s"
 #"truct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 "
 #"0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struc"
 #"t:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)"
 #") 255 \"white\")))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player+image"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 12           4 65 1069
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 225 210 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 15 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 60"
 #"0) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #("
 #"struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(stru"
 #"ct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0"
 #")) 255 \"white\")))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; bullet+image : Bullet Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; places a bullet on an image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bullet+image"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"place-image-grid"
0 0 24 3 1 #" "
0 0 14 3 10 #"BULLET-IMG"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")) "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bullet+image"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 12           4 65 1068
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 81 1027/2 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 3 0 0 0) #(struct:pulled-point 0 0 3 8 0 0) #(struct:pulled-poin"
 #"t 0 0 0 8 0 0)) 255 \"orange\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(s"
 #"truct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 "
 #"0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struc"
 #"t:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)"
 #") 255 \"white\")))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"bullet+image"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"35"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 12           4 65 1067
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 81 127/2 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 3 0 0 0) #(struct:pulled-point 0 0 3 8 0 0) #(struct:pulled-point"
 #" 0 0 0 8 0 0)) 255 \"orange\"))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600)"
 #" #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(st"
 #"ruct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0"
 #" 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(struct"
 #":translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struct"
 #":pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0))"
 #" 255 \"white\")))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; mushroom+image ; Mushroom Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; draws a mushroom onto an image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"mushroom+image"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 18 #"mushroom-condition"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 16 #"place-image-grid"
0 0 24 3 1 #" "
0 0 14 3 10 #"MUSHROOM-4"
0 0 24 3 2 #" ("
0 0 14 3 19 #"get-mushroom-posn-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 3 #") ("
0 0 14 3 19 #"get-mushroom-posn-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 18 #"mushroom-condition"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 16 #"place-image-grid"
0 0 24 3 1 #" "
0 0 14 3 10 #"MUSHROOM-3"
0 0 24 3 2 #" ("
0 0 14 3 19 #"get-mushroom-posn-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 3 #") ("
0 0 14 3 19 #"get-mushroom-posn-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 18 #"mushroom-condition"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 16 #"place-image-grid"
0 0 24 3 1 #" "
0 0 14 3 10 #"MUSHROOM-2"
0 0 24 3 2 #" ("
0 0 14 3 19 #"get-mushroom-posn-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 3 #") ("
0 0 14 3 19 #"get-mushroom-posn-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 18 #"mushroom-condition"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 16 #"place-image-grid"
0 0 24 3 1 #" "
0 0 14 3 10 #"MUSHROOM-1"
0 0 24 3 2 #" ("
0 0 14 3 19 #"get-mushroom-posn-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 3 #") ("
0 0 14 3 19 #"get-mushroom-posn-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"mushroom+image"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 12           4 65 938
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 75 510 #(struct:translate 15/2 15/2 #(st"
 #"ruct:ellipse 15 15 0 255 \"DarkRed\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 3"
 #"75 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 "
 #"0) #(struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 "
 #"0 600 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #"
 #"(struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 60"
 #"0 0 0)) 255 \"white\")))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"mushroom+image"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 12           4 65 938
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 150 510 #(struct:translate 15/2 15/2 #(s"
 #"truct:ellipse 15 15 0 255 \"Salmon\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 3"
 #"75 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 "
 #"0) #(struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 "
 #"0 600 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #"
 #"(struct:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 60"
 #"0 0 0)) 255 \"white\")))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; lom+image : [Listof Mushrooms] Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; draws a Listof mushrooms onto an image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"lom+image"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 14 3 14 #"mushroom+image"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"lom+image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 12           4 65 1474
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 75 465 #(struct:translate 15/2 15/2 #(st"
 #"ruct:ellipse 15 15 0 255 \"DarkRed\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 3"
 #"75 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 75 510 #(struct:translate 15/2 15/2 #(struct:e"
 #"llipse 15 15 0 255 \"DarkRed\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 75 360 #(struct:translate 15/2 15/2 #(struct:ellipse"
 #" 15 15 0 255 \"DarkRed\"))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600) #(st"
 #"ruct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struct:"
 #"pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) "
 #"outline #(struct:pen \"black\" 2 solid round round)))) #(struct:tran"
 #"slate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struct:pull"
 #"ed-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) 255 "
 #"\"white\")))))))))))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"lom+image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 14 3 2 #"BG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 12           4 65 1476
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 150 465 #(struct:translate 15/2 15/2 #(s"
 #"truct:ellipse 15 15 0 255 \"DarkRed\"))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point "
 #"375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 180 510 #(struct:translate 15/2 15/2 #(struct"
 #":ellipse 15 15 0 255 \"DarkRed\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 6"
 #"00) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 30 360 #(struct:translate 15/2 15/2 #(struct:ellip"
 #"se 15 15 0 255 \"DarkRed\"))) #(struct:translate 0 0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600) #("
 #"struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struc"
 #"t:pulled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)"
 #") outline #(struct:pen \"black\" 2 solid round round)))) #(struct:tr"
 #"anslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struct:pu"
 #"lled-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) 25"
 #"5 \"white\")))))))))))))))))) #(struct:bb 375 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; world->image: World -> Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world->image"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 24 #"list-of-centipedes+image"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 12 #"player+image"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 12 #"bullet+image"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-bullet"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 9 #"lom+image"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #") "
0 0 14 3 2 #"BG"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world->image"
0 0 24 3 1 #" "
0 0 14 3 6 #"world0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 12           4 65 4410
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 50.0 530.3349364905389 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 -0.0 4.330127018922194 0 0) #(struct:pull"
 #"ed-point 0 0 5.0 4.330127018922194 0 0) #(struct:pulled-point 0 0 2."
 #"500000000000001 0.0 0 0)) 255 \"red\")) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 3"
 #"75 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 45 525 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 "
 #"0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 "
 #"0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600) #(st"
 #"ruct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 60 525 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #(struc"
 #"t:pulled-point 0 0 15 15 0 0) #(struct:pulled-point 0 0 0 15 0 0)) 2"
 #"55 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 375 0) #(struct:point 375 600) #(struct:point 0"
 #" 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 12"
 #"5.0 530.3349364905389 #(struct:polygon (#(struct:pulled-point 0 0 -0"
 #".0 4.330127018922194 0 0) #(struct:pulled-point 0 0 5.0 4.3301270189"
 #"22194 0 0) #(struct:pulled-point 0 0 2.500000000000001 0.0 0 0)) 255"
 #" \"red\")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 375 0) #(struct:point 375 600) #(struct:point 0 600)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 120 525"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 15 0 0 0) #(struct:pulled-point 0"
 #" 0 15 15 0 0) #(struct:pulled-point 0 0 0 15 0 0)) 255 \"green\"))) "
 #"#(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:p"
 #"oint 375 0) #(struct:point 375 600) #(struct:point 0 600)) #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 135 525 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 "
 #"0) #(struct:pulled-point 0 0 0 15 0 0)) 255 \"green\"))) #(struct:tr"
 #"anslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 375 0)"
 #" #(struct:point 375 600) #(struct:point 0 600)) #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 180 585 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct"
 #":pulled-point 0 0 0 15 0 0)) 255 \"black\"))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 375 0) #(struct:p"
 #"oint 375 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 186 1207/2 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 3 0 0 0) #(struct:pulled-point 0 0 3 8 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 8 0 0)) 255 \"orange\"))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 60"
 #"0) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 90 555 #(struct:translate 15/2 15/2 #(struct:ellips"
 #"e 15 15 0 255 \"DarkRed\"))) #(struct:translate 0 0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 375 0) #(struct:point 375 600) #(s"
 #"truct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 360 210 #(struct:translate 15/2 15/2 #(struct:ellipse 15 "
 #"15 0 255 \"DarkRed\"))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 375 0) #(struct:point 375 600) #(struct"
 #":point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struct:pull"
 #"ed-point 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) outl"
 #"ine #(struct:pen \"black\" 2 solid round round)))) #(struct:translat"
 #"e 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 375 0 0 0) #(struct:pulled-p"
 #"oint 0 0 375 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) 255 \"wh"
 #"ite\")))))))))))))))))))))))))))))))))))))))))))))) #(struct:bb 375 "
 #"600 600.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; Game Logic Functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; same-posn? : Posn Posn -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"same-posn?"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"same-posn?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"same-posn?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; get-mushroom-posn-x : Mushroom -> X-Coordinate"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; finds x coordinate of mushroom"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"get-mushroom-posn-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"get-mushroom-posn-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; get-mushroom-posn-y : Mushroom -> Y-Coordinate"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; finds x coordinate of mushroom"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"get-mushroom-posn-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"get-mushroom-posn-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;mushroom-exist? : [Listof Mushrooms] Mushroom -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; checks to see if a Mushroom is in a preexisting Listof Mushrooms"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"mushroom-exist?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #" "
0 0 14 3 4 #"mush"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 10 #"same-posn?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"mush"
0 0 24 3 4 #"))) "
0 0 14 3 3 #"lom"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"mushroom-exist?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"mushroom-exist?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"mushroom-exist?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Check-Good-Mushroom: Mushroom -> Prelim-Output"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; where Prelim-Output is one of"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;    Mushroom"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;    false"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; Checks if a mushroom is unique, and returns the mushroom if it is"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; and false if it isn't unique"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"check-good-mushroom"
0 0 24 3 1 #" "
0 0 14 3 4 #"mush"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 15 #"mushroom-exist?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #" "
0 0 14 3 4 #"mush"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 4 #"mush"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"check-good-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"check-good-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; Make-Random-New-Mushroom-Prelim: [Listof Mushrooms] -> Prelim-Out"
 #"put,"
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";; where Prelim-Output is one of"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;    Mushroom"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;    false"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; Generates a random mushroom and checks it for uniqueness"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 31 #"make-new-random-mushroom-prelim"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 19 #"check-good-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #")))) "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 3 #"lom"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 9 #"mushroom?"
0 0 24 3 2 #" ("
0 0 14 3 31 #"make-new-random-mushroom-prelim"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 31 #"make-new-random-mushroom-prelim"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Only-Mushrooms: Prelim-Output -> Mushroom"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; outputs a random mushroom given a preliminary mushroom"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"only-mushrooms"
0 0 24 3 1 #" "
0 0 14 3 7 #"poutput"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 9 #"mushroom?"
0 0 24 3 1 #" "
0 0 14 3 7 #"poutput"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"poutput"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"only-mushrooms"
0 0 24 3 2 #" ("
0 0 14 3 31 #"make-new-random-mushroom-prelim"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 2 #") "
0 0 14 3 3 #"lom"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"mushroom?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"only-mushrooms"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 5 #")))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"mushroom?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"only-mushrooms"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 5 #")))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; Make-Random-New-Mushroom: Listof Mushrooms -> Mushroom"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; creates a unique random Mushroom"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"make-random-new-mushroom"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"only-mushrooms"
0 0 24 3 2 #" ("
0 0 14 3 31 #"make-new-random-mushroom-prelim"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 2 #") "
0 0 14 3 3 #"lom"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"mushroom?"
0 0 24 3 2 #" ("
0 0 14 3 24 #"make-random-new-mushroom"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; randomly-generate-mushrooms : Number [Listof Mushrooms] -> [Listo"
 #"f Mushrooms]"
) 0 0 24 29 1 #"\n"
0 0 17 3 116
(
 #";; takes a number of mushrooms and Listof Mushrooms and generates a "
 #"random Listof Mushrooms, with repetition allowed"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"randomly-generate-mushrooms"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #" "
0 0 14 3 8 #"num-mush"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 8 #"num-mush"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 3 #"lom"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 8 #"num-mush"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 27 #"randomly-generate-mushrooms"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 24 #"make-random-new-mushroom"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 2 #") "
0 0 14 3 3 #"lom"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"num-mush"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; bullet-hit-mushroom? : Bullet [Listof Mushroom] -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; checks if bullet hit mushroom"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"bullet-hit-mushroom?"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"mush"
0 0 24 3 3 #") ("
0 0 14 3 30 #"bullet-about-to-hit-something?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"mush"
0 0 24 3 2 #") "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")) "
0 0 14 3 3 #"lom"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"bullet-hit-mushroom?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"bullet-hit-mushroom?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; move-centipede : Centipede [Listof Musrooms] -> Centipede"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; moves centipede"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-centipede"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"hit-mushroom?"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 3 #") ("
0 0 14 3 18 #"centipede-hit-wall"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 20 #"hit-floor-centipede?"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #") ("
0 0 14 3 19 #"centipede-hit-floor"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 22 #"hit-ceiling-centipede?"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #") ("
0 0 14 3 21 #"centipede-hit-ceiling"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 19 #"hit-wall-centipede?"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #") ("
0 0 14 3 18 #"centipede-hit-wall"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #") ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"all-but-last"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-centipede"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-centipede"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; all-but-last : Centipede-Body -> Centipede-Body"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; removes the last segment of a Centipede"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"all-but-last"
0 0 24 3 1 #" "
0 0 14 3 9 #"cent-body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 9 #"cent-body"
0 0 24 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 9 #"cent-body"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"cent-body"
0 0 24 3 3 #") ("
0 0 14 3 12 #"all-but-last"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 9 #"cent-body"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"all-but-last"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"all-but-last"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; move-head : Posn Move-Direction -> Posn"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; Moves head of centipede in the direction Move-Direction"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Move-Direction is one of"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; -'up"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; -'down"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; -'double-up"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; -'double-down"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; -'left"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 4 #")  ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 4 #")  ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 6 #")    ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"double-up"
0 0 24 3 6 #")    ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"double-down"
0 0 24 3 6 #")    ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"double-up"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 11 #"double-down"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; move-centipedes?: Number -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; determines if Tic is equal to 0, and therefore the centipedes mov"
 #"e"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"move-centipedes?"
0 0 24 3 1 #" "
0 0 14 3 3 #"tic"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 3 #"tic"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"move-centipedes?"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"move-centipedes?"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; move-centipedes: [Listof Centipedes] [Listof Mushrooms] Tic -> Li"
 #"stof Centipedes"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";; moves centipedes if the Tic is equal to 0"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-centipedes"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #" "
0 0 14 3 3 #"tic"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 16 #"move-centipedes?"
0 0 24 3 1 #" "
0 0 14 3 3 #"tic"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"foldr"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 9 #"centipede"
0 0 24 3 1 #" "
0 0 14 3 4 #"rest"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-centipede"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 2 #") "
0 0 14 3 4 #"rest"
0 0 24 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"loc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-centipedes"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-centipedes"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #"))) ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; hit-mushroom? : Centipede lom -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Checks if centipede hit mushroom"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hit-mushroom?"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 10 #"same-posn?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 79
(
 #"                                                                    "
 #"          ("
) 0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 7 #")))))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 10 #"same-posn?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 79
(
 #"                                                                    "
 #"          ("
) 0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 7 #")))))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hit-mushroom?"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hit-mushroom?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hit-mushroom?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; find-mushroom-to-change : [Listof Mushrooms] Bullet -> Mushroom"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Changes condition of mushroom"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"find-mushroom-to-change"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 30 #"bullet-about-to-hit-something?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 3 #")) "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 18 #"mushroom-condition"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 23 #"find-mushroom-to-change"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 2 #") "
0 0 14 3 6 #"bullet"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 23 #"find-mushroom-to-change"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 23 #"find-mushroom-to-change"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; remove-mushroom : [Listof Mushrooms] Mushroom -> [Listof Mushroom"
 #"s]"
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Removes mushroom to be replaced"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"remove-mushroom"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 18 #"mushroom-condition"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 3 #"lom"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 18 #"mushroom-condition"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 3 #"lom"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 18 #"mushroom-condition"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 3 #"lom"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 18 #"mushroom-condition"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mushroom-posn"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 3 #"lom"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"remove-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"remove-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"remove-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"remove-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; make-mushroom-list : [Listof Mushrooms] Mushroom -> [Listof Mushr"
 #"ooms]"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Makes list of mushrooms with new mushroom"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"make-mushroom-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 18 #"mushroom-condition"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 3 #"lom"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 8 #"mushroom"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"make-mushroom-list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"make-mushroom-list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"make-mushroom-list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"make-mushroom-list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; tic-advance: Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; Takes the value of tic and either advances it by one or reduces i"
 #"t to 0"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"tic-advance"
0 0 24 3 1 #" "
0 0 14 3 3 #"tic"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 3 #"tic"
0 0 24 3 2 #") "
0 0 14 3 12 #"BULLET-SPEED"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"tic-advance"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"BULLET-SPEED"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"tic-advance"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; Update: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; Advances the world every tic"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"update"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"     [("
0 0 14 3 20 #"bullet-hit-mushroom?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-bullet"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 15 #"move-centipedes"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-tic"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 18 #"make-mushroom-list"
0 0 24 3 2 #" ("
0 0 14 3 15 #"remove-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 23 #"find-mushroom-to-change"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-bullet"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 23 #"find-mushroom-to-change"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-bullet"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 11 #"tic-advance"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-tic"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 23 #"bullet-hit-a-centipede?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-bullet"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 22 #"remove-split-centipede"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 15 #"split-centipede"
0 0 24 29 1 #"\n"
0 0 24 3 72
(
 #"                                                                    "
 #"   ("
) 0 0 14 3 12 #"world-bullet"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 28 #"find-centipede-hit-by-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-bullet"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 36 #"add-mushroom-when-centipede-is-split"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-bullet"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 11 #"tic-advance"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-tic"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 16 #"bullet-shooting?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-bullet"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 15 #"move-centipedes"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-tic"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 5 #"shoot"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-bullet"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"tic-advance"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-tic"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 15 #"move-centipedes"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-tic"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-bullet"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"tic-advance"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-tic"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; Make-Initial-World: Number Number -> World"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; Creates a world with the given centipede length and number of mus"
 #"hrooms"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"make-initial-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"cent-length"
0 0 24 3 1 #" "
0 0 14 3 11 #"mush-number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 6 #"PLAYER"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 22 #"make-initial-centipede"
0 0 24 3 1 #" "
0 0 14 3 11 #"cent-length"
0 0 24 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 27 #"randomly-generate-mushrooms"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 11 #"mush-number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 6 #"BULLET"
0 0 24 3 1 #" "
0 0 14 3 11 #"INITIAL-TIC"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; centipede-hit-floor : Centipede -> Centipede"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; makes centipede reverse when it hits the floor"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"centipede-hit-floor"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 9 #"double-up"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 9 #"double-up"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"all-but-last"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 9 #"))))))])]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 9 #"double-up"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 9 #"double-up"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 12 #"all-but-last"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 11 #"))))))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"centipede-hit-floor"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"centipede-hit-floor"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"centipede-hit-floor"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"23"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"centipede-hit-floor"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; centipede-hit-ceiling : Centipede -> Centipede"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; makes centipede reverse when it hits the ceiling"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"centipede-hit-ceiling"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 5 #"))) ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 11 #"double-down"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 11 #"double-down"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 73
(
 #"                                                                    "
 #"    ("
) 0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 76
(
 #"                                                                    "
 #"       ("
) 0 0 14 3 12 #"all-but-last"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 9 #"))))))])]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 5 #"))) ("
0 0 14 3 14 #"make-centipede"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                              "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                              "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 11 #"double-down"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 11 #"double-down"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 12 #"all-but-last"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 11 #"))))))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"centipede-hit-ceiling"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"centipede-hit-ceiling"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"centipede-hit-ceiling"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"centipede-hit-ceiling"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; centipede-hit-wall : Centipede -> Centipede"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; turns around centipede"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"centipede-hit-wall"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 12 #"all-but-last"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 9 #"))))))])]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 12 #"all-but-last"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 11 #"))))))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"centipede-hit-wall"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"centipede-hit-wall"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"centipede-hit-wall"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"21"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"centipede-hit-wall"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"21"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"centipede-hit-wall"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"21"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; bullet-about-to-hit-something? : Posn Bullet -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Checks if bullet is about to hit mushroom"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 30 #"bullet-about-to-hit-something?"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 30 #"bullet-about-to-hit-something?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 30 #"bullet-about-to-hit-something?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"true"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; Hit-Wall-Centipede? : Centipede -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Determines if the Centipede has hit the wall"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"hit-wall-centipede?"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 5 #"))) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"hit-wall-centipede?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"hit-wall-centipede?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"hit-wall-centipede?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"hit-wall-centipede?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; Hit-Floor-Centipede? : Centipede -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Determines if the centipede hit the floor"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"hit-floor-centipede?"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"hit-floor-centipede?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"hit-floor-centipede?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 5 #")))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; Hit-Ceiling-Centipede? : Centipede -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; Determines if the centipede hit the ceiling"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"hit-ceiling-centipede?"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 4 #"))) "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"hit-ceiling-centipede?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 5 #")))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"hit-ceiling-centipede?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; player-hit-wall?: Player Key -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; Checks if player hit wall"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-hit-wall?"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-hit-wall?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-hit-wall?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-hit-wall?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; bullet-hit-wall?: Bullet Key -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; Checks if bullet hit wall"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"bullet-hit-wall?"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"bullet-hit-wall?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"bullet-hit-wall?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"bullet-hit-wall?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; move-player : Player Key-Press -> Player"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; Moves player"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-player"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-hit-wall?"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-hit-wall?"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-player"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-player"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; shoot : Player Bullet -> Bullet"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; Moves bullet vertically"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"shoot"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")) "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 5 #")))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"shoot"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"shoot"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; move-bullet : Bullet Key-Press -> Bullet"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Moves bullet horizontaly"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-bullet"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 16 #"bullet-hit-wall?"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"boolean=?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"bullet-shooting?"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"false"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 16 #"bullet-hit-wall?"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"boolean=?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"bullet-shooting?"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"false"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"| |"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"true"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-bullet"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-bullet"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-bullet"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 3 #"| |"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; bullet-hit-a-centipede? : Bullet [Listof Centipedes] -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"bullet-hit-a-centipede?"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cent"
0 0 24 3 3 #") ("
0 0 14 3 26 #"bullet-hit-this-centipede?"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 4 #"cent"
0 0 24 3 4 #"))) "
0 0 14 3 3 #"loc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 23 #"bullet-hit-a-centipede?"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 23 #"bullet-hit-a-centipede?"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; Bullet-hit-this-centipede?: Centipede Bullet -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; determines if the bullet hit the given centipede"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"bullet-hit-this-centipede?"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 7 #"segment"
0 0 24 3 3 #") ("
0 0 14 3 30 #"bullet-about-to-hit-something?"
0 0 24 3 1 #" "
0 0 14 3 7 #"segment"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")) "
0 0 14 3 14 #"centipede-body"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 26 #"bullet-hit-this-centipede?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 26 #"bullet-hit-this-centipede?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; make-new-centipede-body-left-of-bullet : Centipede-Body Bullet ->"
 #" Centipede-Body"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#";; makes a new centipede body to the left of where a bullet hit"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 38 #"make-new-centipede-body-left-of-bullet"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 38 #"make-new-centipede-body-left-of-bullet"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 2 #") "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 38 #"make-new-centipede-body-left-of-bullet"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 2 #") "
0 0 14 3 6 #"bullet"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 38 #"make-new-centipede-body-left-of-bullet"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; make-new-centipede-body-right-of-bullet : Centipede-Body Bullet -"
 #"> Centipede-Body"
) 0 0 24 29 1 #"\n"
0 0 17 3 64
#";; makes a new centipede body to the right of where a bullet hit"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 39 #"make-new-centipede-body-right-of-bullet"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 39 #"make-new-centipede-body-right-of-bullet"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 2 #") "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 39 #"make-new-centipede-body-right-of-bullet"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 2 #") "
0 0 14 3 6 #"bullet"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 39 #"make-new-centipede-body-right-of-bullet"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; make-new-centipede-bodies : Centipede-Body Bullet -> [Listof Cent"
 #"ipede-Bodies]"
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #";; Make new centipede bodies after getting hit"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 25 #"make-new-centipede-bodies"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 38 #"make-new-centipede-body-left-of-bullet"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 39 #"make-new-centipede-body-right-of-bullet"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 39 #"make-new-centipede-body-right-of-bullet"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 38 #"make-new-centipede-body-left-of-bullet"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 38 #"make-new-centipede-body-left-of-bullet"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #") ("
0 0 14 3 39 #"make-new-centipede-body-right-of-bullet"
0 0 24 3 1 #" "
0 0 14 3 14 #"centipede-body"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 25 #"make-new-centipede-bodies"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 25 #"make-new-centipede-bodies"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 25 #"make-new-centipede-bodies"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 25 #"make-new-centipede-bodies"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 25 #"make-new-centipede-bodies"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; make-new-centipedes : [Listof Centipede-Bodies] Centipede -> [Lis"
 #"tof Centipedes]"
) 0 0 24 29 1 #"\n"
0 0 17 3 53 #";; Makes new centipedes after getting hit by a bullet"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-new-centipedes"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 19 #"make-new-centipedes"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 2 #") "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 19 #"make-new-centipedes"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 2 #") "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 6 #")))) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"empty"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 2 #" ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"empty"
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 14 #"centipede-dirx"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 14 #"centipede-diry"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 19 #"make-new-centipedes"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"locb"
0 0 24 3 2 #") "
0 0 14 3 9 #"centipede"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-new-centipedes"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-new-centipedes"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"23"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"23"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"21"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 5 #"))) ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"23"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"23"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"21"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"23"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"23"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                      ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"21"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-new-centipedes"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-new-centipedes"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; add-mushroom-when-centipede-is-split"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; adds a mushroom at the point where the centipede is hit by bullet"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 36 #"add-mushroom-when-centipede-is-split"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 3 #"lom"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 36 #"add-mushroom-when-centipede-is-split"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-mushroom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; split-centipede : [Listof Centipedes] Bullet -> [Listof Centipede"
 #"s]"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";; splits the centipede when hit by a bullet"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"split-centipede"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 24 3 1 #"("
0 0 14 3 26 #"bullet-hit-this-centipede?"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 19 #"make-new-centipedes"
0 0 24 3 2 #" ("
0 0 14 3 25 #"make-new-centipede-bodies"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 3 #")) "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 15 #"split-centipede"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"split-centipede"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 80
(
 #"                                                                    "
 #"           ("
) 0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"split-centipede"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"split-centipede"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 6 #"))))) "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; find-centipede-hit-by-bullet : [Listof Centipedes] Bullet -> Cent"
 #"ipede"
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #";; finds centipede hit by a bullet"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 28 #"find-centipede-hit-by-bullet"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 26 #"bullet-hit-this-centipede?"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 28 #"find-centipede-hit-by-bullet"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 2 #") "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 28 #"find-centipede-hit-by-bullet"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 6 #")))) ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; remove-split-centipede : [Listof Centipedes] Centipede -> [Listof"
 #" Centipedes]"
) 0 0 24 29 1 #"\n"
0 0 17 3 36 #";; removes centipede hit by a Bullet"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"remove-split-centipede"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 3 #") ("
0 0 14 3 6 #"remove"
0 0 24 3 1 #" "
0 0 14 3 9 #"centipede"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"remove-split-centipede"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"remove-split-centipede"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))) "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; Make-Initial-Centipede: Number -> Centipede"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; Makes first centipede"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"make-initial-centipede"
0 0 24 3 1 #" "
0 0 14 3 6 #"length"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"length"
0 0 24 3 2 #") "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"length"
0 0 24 3 2 #") "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 6 #"length"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 22 #"make-initial-centipede"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"make-initial-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"make-initial-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; bullet-action: Bullet Key-Press -> Bullet "
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Takes a key, returns a Bullet"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bullet-action"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"move-bullet"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"move-bullet"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #") ("
0 0 14 3 11 #"move-bullet"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 6 #"bullet"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bullet-action"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bullet-action"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bullet-action"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-bullet"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; player-action: Player Key-Press -> Player "
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Takes a key, returns a Player"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"player-action"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"move-player"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"move-player"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"player-action"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"player-action"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; key-handler : World Key -> World"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; handles key-presses"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 13 #"player-action"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 15 #"move-centipedes"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-tic"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 13 #"bullet-action"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-bullet"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 11 #"tic-advance"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-tic"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; end-condition: World -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; end-condition: checks to see if the game is over"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"end-condition?"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 22 #"player-hit-centipedes?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"no-centipedes?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"end-condition?"
0 0 24 3 2 #" ("
0 0 14 3 18 #"make-initial-world"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; player-hit-centipedes? Player [Listof Centipedes] -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; checks to see if the Player hit any of the Centipedes in the game"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"player-hit-centipedes?"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cent"
0 0 24 3 3 #") ("
0 0 14 3 21 #"player-hit-centipede?"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #" ("
0 0 14 3 24 #"centipede-centipede-body"
0 0 24 3 1 #" "
0 0 14 3 4 #"cent"
0 0 24 3 4 #"))) "
0 0 14 3 3 #"loc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"player-hit-centipedes?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 6 #"))))) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"player-hit-centipedes?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 6 #"))))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; player-hit-centipede?: Player Centipede-Body -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; checks to see if the Player hit the given Centipede-Body"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"player-hit-centipede?"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 9 #"cent-body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 7 #"segment"
0 0 24 3 3 #") ("
0 0 14 3 10 #"same-posn?"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 7 #"segment"
0 0 24 3 3 #")) "
0 0 14 3 9 #"cent-body"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"player-hit-centipede?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"player-hit-centipede?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; no-centipedes?: [Listof Centipedes] -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; checks to see if there are no centipedes remaining"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"no-centipedes?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"no-centipedes?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-centipede"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 6 #"))))) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"no-centipedes?"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; draw-final-screen: World -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Draws the screen when the game is over"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"draw-final-screen"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"   [("
0 0 14 3 22 #"player-hit-centipedes?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-player"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"overlay"
0 0 24 3 1 #" "
0 0 14 3 5 #"LOSER"
0 0 24 3 1 #" "
0 0 14 3 2 #"BG"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"   [("
0 0 14 3 14 #"no-centipedes?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loc"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"overlay/offset"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 10 #"find-score"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-lom"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")) "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"-50"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 1 #" "
0 0 14 3 6 #"WINNER"
0 0 24 3 1 #" "
0 0 14 3 2 #"BG"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Main: Number Number -> Animation"
0 0 24 29 1 #"\n"
0 0 17 3 112
(
 #";; runs big-bang animation; accepts a centipede length with a max si"
 #"ze of 20 and a max number of mushrooms of 60"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 11 #"cent-length"
0 0 24 3 1 #" "
0 0 14 3 8 #"mush-num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 24 3 2 #" ("
0 0 14 3 18 #"make-initial-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"cent-length"
0 0 24 3 1 #" "
0 0 14 3 8 #"mush-num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 6 #"update"
0 0 24 3 1 #" "
0 0 21 3 4 #".001"
0 0 24 3 3 #") ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 12 #"world->image"
0 0 24 3 3 #") ("
0 0 14 3 9 #"stop-when"
0 0 24 3 1 #" "
0 0 14 3 14 #"end-condition?"
0 0 24 3 1 #" "
0 0 14 3 17 #"draw-final-screen"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; find-score : [Listof Mushrooms] -> String"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; finds score"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"find-score"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Score: \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 4 #"))))"
0           0
